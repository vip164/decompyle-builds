name: Compile pycdc for Windows & Linux
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        run: git clone --depth=1 https://github.com/vip164/pycdc && cd pycdc && echo "RELEASE_COMMIT=$(git log -1 --format=%h)" >> ${GITHUB_ENV}

      # 编译Windows版本（交叉编译）
      - name: Install mingw-w64
        run: sudo apt update && sudo apt install -y mingw-w64

      - name: Compile Windows
        run: |
          cd pycdc
          cmake -DCMAKE_SYSTEM_NAME=Windows \
                -DCMAKE_C_COMPILER=i686-w64-mingw32-gcc \
                -DCMAKE_CXX_COMPILER=i686-w64-mingw32-g++ \
                -DCMAKE_FIND_ROOT_PATH=/usr/i686-w64-mingw32 \
                -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
                -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
                -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
                -DCMAKE_CXX_STANDARD_LIBRARIES="-static-libgcc -static-libstdc++" .
          make
          # 移动到统一目录
          mkdir -p ../artifacts/windows
          mv pycdc.exe ../artifacts/windows/
          mv pycdas.exe ../artifacts/windows/

      # 编译Linux x86_64（直接在ubuntu上编译，无需Alpine容器）
      - name: Compile Linux x86_64
        run: |
          cd pycdc
          git clean -d -f -x  # 清理之前的编译产物
          sed -i '/target_link_libraries(pycdas pycxx)/c target_link_libraries(pycdas pycxx -static)' CMakeLists.txt
          sed -i '/target_link_libraries(pycdc pycxx)/c target_link_libraries(pycdc pycxx -static)' CMakeLists.txt
          cmake .
          make
          # 移动到统一目录
          mkdir -p ../artifacts/linux-x86_64
          mv pycdc ../artifacts/linux-x86_64/pycdc.x86_64
          mv pycdas ../artifacts/linux-x86_64/pycdas.x86_64

      # 编译Linux aarch64（通过交叉编译，避免Alpine容器隔离）
      - name: Install aarch64 cross-compiler
        run: sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Compile Linux aarch64
        run: |
          cd pycdc
          git clean -d -f -x
          sed -i '/target_link_libraries(pycdas pycxx)/c target_link_libraries(pycdas pycxx -static)' CMakeLists.txt
          sed -i '/target_link_libraries(pycdc pycxx)/c target_link_libraries(pycdc pycxx -static)' CMakeLists.txt
          cmake -DCMAKE_SYSTEM_NAME=Linux \
                -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
                -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ .
          make
          # 移动到统一目录
          mkdir -p ../artifacts/linux-aarch64
          mv pycdc ../artifacts/linux-aarch64/pycdc.aarch64
          mv pycdas ../artifacts/linux-aarch64/pycdas.aarch64

      # 统一发布所有产物
      - name: Set release info
        run: |
          echo "RELEASE_DATE=$(date -u +%d-%b-%Y)" >> ${GITHUB_ENV}
          echo "RELEASE_TIME=$(date -u +%H:%M)" >> ${GITHUB_ENV}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: Decompyle++ ${{ env.RELEASE_DATE }}
          tag: build-${{ env.RELEASE_DATE }}-${{ env.RELEASE_COMMIT }}
          body: Compiled on ${{ env.RELEASE_DATE }} at ${{ env.RELEASE_TIME }} GMT, pycdc commit ${{ env.RELEASE_COMMIT }}
          artifacts: "artifacts/windows/*,artifacts/linux-x86_64/*,artifacts/linux-aarch64/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          draft: true
